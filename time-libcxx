#!/bin/bash
set -e

export LD_LIBRARY_PATH=/usr/local/lib
export CPLUS_INCLUDE_PATH=/usr/local/include/c++/v1
export C_INCLUDE_PATH=/usr/local/include/c++/v1

FILENAME=$1
PARAMETERS="${@:2}"
COUNTER=0
SECONDS=0
# default 60s timeout can be changed with an environment variable
MAX_TIME="${BB_TIMEOUT:-60}"
MAX_COUNTER="${BB_MAX:-20}"
LAST_TIME=0
MAX_DURATION=0

# Generate a list of all used includes to display
$CXX -H -fsyntax-only $PARAMETERS -stdlib=libc++ $FILENAME 2> bench.inc
# Make a cleaned copy that can be used as input for vmtouch
sed -r 's/\.+ //' bench.inc | xargs -r realpath > bench.cache
echo $1 > bench.cache

while [[ $COUNTER -lt $MAX_COUNTER && $SECONDS -lt $((MAX_TIME - MAX_DURATION)) ]]; do
  # Make sure no include is in the cache before starting the build
  vmtouch -eq $(< bench.cache)
  script --flush --quiet --return output.txt --command "/usr/bin/time -o one-bench.out -f \"%U\t%S\t%M\t%I\t%O\t%F\t%R\" $CXX $PARAMETERS -stdlib=libc++ $FILENAME"
  let COUNTER=COUNTER+1
  let "MAX_DURATION = (MAX_DURATION < (SECONDS-LAST_TIME)) ? (SECONDS-LAST_TIME) : MAX_DURATION" || true
  cat one-bench.out >> bench.out
  let "LAST_TIME=SECONDS" || true
done
