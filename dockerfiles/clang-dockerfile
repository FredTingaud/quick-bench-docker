FROM ubuntu:20.04

MAINTAINER Fred Tingaud <ftingaud@hotmail.com>

USER root

ENV DEBIAN_FRONTEND noninteractive

ARG release

ARG libstdcxx

ARG patches

ARG headers

RUN apt-get update && apt-get -qy install \
   git \
   cmake \
   libfreetype6-dev \
   flex \
   bison \
   binutils-dev \
   libiberty-dev \
   libelf-dev \
   libmpc-dev \
   g++ \
   curl \
   xz-utils \
   wget \
   subversion \
   $libstdcxx \
   python3 \
   time \
   && rm -rf /var/lib/apt/lists/*

ENV CC gcc
ENV CXX g++

RUN cd /usr/src/ \
    && git clone --single-branch --branch v5.6 https://github.com/torvalds/linux.git \
    && cd linux/tools/perf \
    && make -j"$(nproc)" \
    && cp perf /usr/bin \
    && cd /usr/src \
    && rm -rf linux

ENV CLANG_RELEASE $release

COPY $patches /usr/src/patch-llvm/

RUN cd /usr/src \
    && git clone --single-branch --branch $CLANG_RELEASE https://github.com/llvm/llvm-project.git \
    && cd llvm-project \
    && find /usr/src/patch-llvm/ -type f -name '*.patch' -print0 | sort -z | xargs -0 -t -r -n 1 patch -p1 --forward -i \
    && rm -rf /usr/src/patch-llvm \
    && mkdir build \
    && cd build \
    && if [ ! -f /usr/include/xlocale.h ] ; then ln -s /usr/include/locale.h /usr/include/xlocale.h ; else true ; fi \
    && cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS="clang;libcxx;libcxxabi;lld" -DLLVM_TARGETS_TO_BUILD=X86 -DCLANG_INCLUDE_DOCS=OFF -DCLANG_INCLUDE_TESTS=OFF -DCLANG_ENABLE_STATIC_ANALYZER=OFF -DCLANG_ENABLE_ARCMT=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLIBCXX_INCLUDE_BENCHMARKS=OFF -DLLVM_INCLUDE_UTILS=OFF -DLLVM_BUILD_TESTS=OFF ../llvm \
    && make -j"$(nproc)" install-clang install-lld install-cxx install-cxxabi install-llvm-ar install-llvm-nm install-llvm-ranlib llvm-config ${headers} \
    && cp ../libcxxabi/include/* /usr/local/include/c++/v1/. \
    && cd ../.. \
    && rm -rf llvm-project \
    && cd /usr/local/bin

ENV CC clang
ENV CXX clang++

RUN cd /usr/src/ \
    && git clone --single-branch --branch v1.6.1 https://github.com/google/benchmark.git \
    && mkdir -p /usr/src/benchmark/build/ \
    && cd /usr/src/benchmark/build/ \
    && cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_LTO=true -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DRUN_HAVE_STD_REGEX=0 -DRUN_HAVE_POSIX_REGEX=0 .. \
    && make -j"$(nproc)" \
    && make install \
    && cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_LTO=true -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -std=c++11 -stdlib=libc++" -DCMAKE_EXE_LINKER_FLAGS="-lc++abi" -DRUN_HAVE_STD_REGEX=0 -DRUN_HAVE_POSIX_REGEX=0 .. \
    && make clean all -j"$(nproc)" \
    && cp src/libbenchmark.a /usr/local/lib/libbenchmark-cxx.a

RUN svn checkout https://github.com/ericniebler/range-v3/tags/0.3.0/include /usr/include

RUN git clone https://github.com/hoytech/vmtouch.git \
    && cd vmtouch \
    && make \
    && make install \
    && cd .. \
    && rm -rf vmtouch

RUN apt-get autoremove -y git \
    cmake \
    flex \
    bison \
    libiberty-dev \
    curl \
    xz-utils \
    wget \
    subversion \
    g++ \
    python3

RUN rm -f /usr/bin/ld && ln -s /usr/local/bin/ld.lld /usr/bin/ld

RUN useradd -m -s /sbin/nologin -N -u 1000 builder

COPY commands/annotate /home/builder/annotate

COPY commands/build /home/builder/build

COPY commands/run /home/builder/run

COPY commands/build-libcxx /home/builder/build-libcxx

COPY commands/time /home/builder/time-build

COPY commands/time-libcxx /home/builder/time-build-libcxx

COPY commands/prebuild /home/builder/prebuild

COPY commands/prebuild-libcxx /home/builder/prebuild-libcxx

COPY commands/clang-about-me /home/builder/about-me

COPY commands/clang-experimental-flags /home/builder/experimental-flags

USER builder

WORKDIR /home/builder
